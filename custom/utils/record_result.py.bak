'''
    改文件从 log.txt 中提取实验结果
    分别是第三波和第四波的 (21,7) (21,14) (21,21) 共六次的实验结果
    每次都分
        test mae,
        test rmse,
        early_stop_epoch,
        result dir timestamp
    四次
'''
import os, re
from argparse import ArgumentParser
parser = ArgumentParser()
parser.add_argument("-d", "--dir", default="results/test/exp_test001")
args = parser.parse_args()

print(args)

result_dir = args.dir
exp = 0
files = os.listdir(result_dir)
# assert not len(files) % 6, files
files = [sorted(files[i: i + 6], key=lambda i: int(i.split('_')[0]) * 100 + int(i.split('_')[2])) for i in range(len(files) // 6)]
# sorted()
files = files[exp]
res_latest = ()
res_best = ()
for subdir in files:
    path = os.path.join(result_dir, subdir, "log.txt")
    with open(path) as f: lines = f.readlines()
    for i in range(len(lines)):
        if "训练完毕，开始评估" in lines[i]:
            break
    try:
        test_metrics_latest = re.search(r"\[test.*\]\ (.*)", lines[i + 3]).groups()
        test_metrics_latest = test_metrics_latest[0].split('/')
        epoch, test_loss = re.search(r"\[Epoch\]\ (\d+).*\[Loss.*?/([\d.]+)", lines[i - 3]).groups()
        # res_latest += (*test_metrics_latest, epoch, test_loss.split('_')[-1])
        res_latest += (*test_metrics_latest, epoch, subdir.split('_')[-1])
    except Exception as e:
        print(e)
        res_latest += (('-',) * 4)
        
    try:
        test_metrics_best = re.search(r"\[test.*\]\ (.*)", lines[i + 7]).groups()
        test_metrics_best = test_metrics_best[0].split('/')
        epoch, = re.search(r"epoch (\d+)", lines[i + 6]).groups()
        res_best += (*test_metrics_best, epoch, subdir.split('_')[-1])
        # epoch, test_loss = re.search(r"epoch (\d+)", lines[i + 6]).groups()
        # res_best += (*test_metrics_best, epoch, test_loss.split('_')[-1])
    except Exception as e:
        print(e)
        res_best += (('-',) * 4)

print('latest')
print('\t'.join(res_latest))
print('best')
print('\t'.join(res_best))
    
